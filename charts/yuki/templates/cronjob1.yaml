apiVersion: batch/v1
kind: CronJob
metadata:
  name: system-monitoring-job
spec:
  schedule: "*/1 * * * *"
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 30
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          initContainers:
            - name: curl
              image: alpine/curl
              command: [ "curl" ]
              args: [ "https://prod.yukicomputing.com/health > /data/result.txt" ]
              volumeMounts:
                - name: data-dir
                  mountPath: "/data"
          containers:
            - name: set-system
              image: aasaru/alpine-redis-cli
              command: [ "redis-cli" ]
              args: [ "-c", "-h", "$REDIS_HOST", "set $SYSTEM_REDIS_KEY true" ]
              volumeMounts:
                - name: data-dir
                  mountPath: /data
              env:
                - name: REDIS_KEY
                  value: "yuki-system-monitoring"
                {{- range $key, $value := $.Values.app.container.env }}
                - name: {{ $key }}
                  value: {{ $value | quote }}
                {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          restartPolicy: OnFailure
          volumes:
            - name: data-dir
              emptyDir: { }

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: compute-monitoring-job
spec:
  schedule: "*/1 * * * *"
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 30
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          initContainers:
            - name: curl-compute
              image: alpine/curl
              command: [ "curl" ]
              args: [ "https://prod.yukicomputing.com/compute/health > /data/result.txt" ]
              volumeMounts:
                - name: data-dir
                  mountPath: "/data"
          containers:
            - name: set-result
              image: redis:8-alpine
              command: [ "redis-cli" ]
              args: [ "-c", "-h", "$REDIS_HOST", "set $REDIS_KEY true" ]
              volumeMounts:
                - name: data-dir
                  mountPath: /data
              env:
                - name: REDIS_KEY
                  value: "yuki-compute-monitoring"
                {{- range $key, $value := $.Values.app.container.env }}
                - name: {{ $key }}
                  value: {{ $value | quote }}
                {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          restartPolicy: OnFailure
          volumes:
            - name: data-dir
              emptyDir: { }


---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: hello
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: ubuntu
              image: ubuntu
              command: [ /bin/bash ]
              args: [ "-c","cat /data/hello_there.txt" ]
              volumeMounts:
                - name: data-dir
                  mountPath: /data
          initContainers:
            - name: echo
              image: busybox
              command: [ "bin/sh" ]
              args: [ "-c", "echo 'General Kenobi!' > /data/hello_there.txt" ]
              volumeMounts:
                - name: data-dir
                  mountPath: "/data"
          volumes:
            - name: data-dir
              emptyDir: { }
